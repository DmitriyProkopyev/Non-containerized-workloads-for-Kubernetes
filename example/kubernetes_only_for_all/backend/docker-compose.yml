services:
  mongo:
    image: mongo:latest
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db
    restart: unless-stopped
    networks:
      - app-network

  jaeger:
    image: jaegertracing/all-in-one:1.52
    ports:
      - "16686:16686"  # UI
      - "14268:14268"  # HTTP collector
      - "6831:6831"    # UDP agent
    environment:
      - COLLECTOR_ZIPKIN_HOST_PORT=:9411
    restart: unless-stopped
    networks:
      - app-network

  frontend:
    build:
      context: ../frontend
      dockerfile: Dockerfile
    volumes:
      - ../frontend/build:/usr/share/nginx/html
    restart: unless-stopped
    networks:
      - app-network

  backend:
    build: .
    ports:
      - "8000:80"
    environment:
      - MONGO_URI=mongodb://mongo:27017
      - MONGO_DB_NAME=testdb
      - OTEL_SERVICE_NAME=backend
      - OTEL_EXPORTER_JAEGER_ENDPOINT=http://jaeger:14268/api/traces
    depends_on:
      mongo:
        condition: service_started
      jaeger:
        condition: service_started
    restart: unless-stopped
    networks:
      - app-network

  nginx:
    image: nginx:latest
    ports:
      - "8080:80"
    volumes:
      - /mnt/c/Users/1alen/Desktop/My_Py_Projects/DNP/Distributed-database-deployment-exercise/backend/nginx.conf:/etc/nginx/nginx.conf
      - /mnt/c/Users/1alen/Desktop/My_Py_Projects/DNP/Distributed-database-deployment-exercise/frontend/build:/usr/share/nginx/html
    depends_on:
      - backend
      - frontend
    restart: unless-stopped
    networks:
      - app-network

volumes:
  mongo_data:
  kafka_data:

networks:
  app-network:
    driver: bridge
